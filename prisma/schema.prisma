generator client {
  provider = "prisma-client-js"
}

// generator erd {
//   provider = "prisma-erd-generator"
//   output   = "../ERD.svg"
//   theme    = "forest"
// }

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES_PRISMA_URL")
  directUrl         = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id        String     @id @default(cuid())
  email     String     @unique
  username  String?    @unique
  password  String
  avatar    String?
  comments  Comment[]
  createdAt DateTime   @default(now())
  Cart      Cart[]
  Wishlist  Wishlist[]
  Like      Like[]
}

model Product {
  id             String           @id @default(cuid())
  name           String
  price          Int
  image          String
  description    String
  poster         String
  commented      Comment[]
  catalog_name   Catalog          @relation(fields: [catalogId], references: [id])
  discount       Discount?        @relation(fields: [discountId], references: [id])
  tags_name      Tag[]
  isInStock      Boolean          @default(true)
  view           Int?             @default(0)
  Characteristic Characteristic[]
  catalogId      String
  discountId     String?          @unique
  Cart           Cart[]
  Wishlist       Wishlist[]
}

model Characteristic {
  id        String   @id @default(cuid())
  attribute String
  value     String
  Product   Product? @relation(fields: [productId], references: [id])
  productId String
}

model Comment {
  id        String   @id @default(cuid())
  content   String
  createdAt DateTime @default(now())
  rate      Int
  Product   Product? @relation(fields: [productId], references: [id])
  productId String?
  User      User?    @relation(fields: [userId], references: [id])
  userId    String?
  Like      Like[]

  @@index([productId])
}

model Like {
  id        String  @id @default(cuid())
  user      User    @relation(fields: [userId], references: [id])
  comment   Comment @relation(fields: [commentId], references: [id])
  commentId String
  userId    String
}

model Tag {
  id        String   @id @default(cuid())
  name      String
  Product   Product? @relation(fields: [productId], references: [id])
  productId String?
}

model Catalog {
  id      String    @id @default(cuid())
  name    String    @unique
  Product Product[]
}

model Discount {
  id       String    @id @default(cuid())
  isActive Boolean?  @default(true)
  percent  Int?
  Product  Product[]
}

model Cart {
  id        String  @id @default(cuid())
  user      User    @relation(fields: [userId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
  userId    String
  productId String
  count     Int     @default(1)

  @@unique([userId, productId])
}

model Wishlist {
  id        String  @id @default(cuid())
  user      User    @relation(fields: [userId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
  userId    String
  productId String
  count     Int     @default(1)
}
